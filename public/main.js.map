{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/services/api.service.ts","webpack:///./src/app/core/services/customers.service.ts","webpack:///./src/app/core/services/index.ts","webpack:///./src/app/customer-page/customer-page.component.css","webpack:///./src/app/customer-page/customer-page.component.html","webpack:///./src/app/customer-page/customer-page.component.ts","webpack:///./src/app/customers/customers.component.css","webpack:///./src/app/customers/customers.component.html","webpack:///./src/app/customers/customers.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/products/products.component.css","webpack:///./src/app/products/products.component.html","webpack:///./src/app/products/products.component.ts","webpack:///./src/app/shared/confirm-delete/confirm-delete.component.css","webpack:///./src/app/shared/confirm-delete/confirm-delete.component.html","webpack:///./src/app/shared/confirm-delete/confirm-delete.component.ts","webpack:///./src/app/shared/edit-window/edit-window.component.css","webpack:///./src/app/shared/edit-window/edit-window.component.html","webpack:///./src/app/shared/edit-window/edit-window.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { CustomersComponent } from './customers/customers.component';\nimport { ProductsComponent } from './products/products.component';\nimport { CustomerPageComponent } from './customer-page/customer-page.component';\n\n\nconst appRoutes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'customers', component: CustomersComponent },\n  { path: 'customers/:id', component: CustomerPageComponent },\n  { path: 'products', component: ProductsComponent },\n  // { path: '**', redirectTo: 'customers' }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(appRoutes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","module.exports = \".main-area {\\n  margin: 30px auto;\\n  min-height: 500px;\\n  width: 90%;\\n}\\n\"","module.exports = \"<div class=\\\"app-view\\\">\\n  \\n  <app-header></app-header>\\n\\n  <div class=\\\"main-area\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n  \\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'test-app';\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxDatatableModule } from '../../node_modules/@swimlane/ngx-datatable';\n\nimport { SharedModule } from './shared/shared.module';\nimport { CoreModule } from './core/core.module';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './header/header.component';\nimport { CustomersComponent } from './customers/customers.component';\nimport { CustomerPageComponent } from './customer-page/customer-page.component';\nimport { ProductsComponent } from './products/products.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    CustomersComponent,\n    CustomerPageComponent,\n    ProductsComponent,\n  ],\n  imports: [\n    NgbModule,\n    NgxDatatableModule,\n\n    BrowserModule,\n    BrowserAnimationsModule,\n\n    SharedModule,\n    CoreModule.forRoot(),\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CustomersService } from './services/customers.service';\n\n@NgModule({ })\nexport class CoreModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        CustomersService\n      ]\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  // private host = 'http://localhost:5000/api';\n  private host = 'https://vdenisov-assessment-api.herokuapp.com/api';\n\n  constructor(private http: HttpClient) { }\n\n  public get(route, params?): Observable<any> {\n    return this.http.get(`${this.host}/${route}`, params);\n  }\n\n  public post(route, data, params?): Observable<any> {\n    return this.http.post(`${this.host}/${route}`, data, params);\n  }\n\n  public put(route, data, params?): Observable<any> {\n    return this.http.put(`${this.host}/${route}`, data, params);\n  }\n\n  public delete(route, params?): Observable<any> {\n    return this.http.delete(`${this.host}/${route}`, params);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomersService {\n\n  constructor(private apiService: ApiService) {}\n\n  public create(data) {\n    return this.apiService.post(`customers`, data);\n  }\n\n  public getAll() {\n    return this.apiService.get(`customers`);\n  }\n\n  public getById(id) {\n    return this.apiService.get(`customers/${id}`);\n  }\n\n  public updateById(id, data) {\n    return this.apiService.put(`customers/${id}`, data);\n  }\n\n  public deleteById(id) {\n    return this.apiService.delete(`customers/${id}`);\n  }\n\n}\n","export { CustomersService } from './customers.service';\n","module.exports = \".return-back {\\n  background-color: black;\\n  border: 1px solid black;\\n  color: white;\\n  font-size: 20px;\\n  font-weight: 900;\\n  letter-spacing: 2px;\\n}\\n\\n.return-back:hover {\\n  background-color: white;\\n  color: black;\\n  letter-spacing: 5px;\\n  transition: .5s;\\n}\\n\\n.single-card {\\n  width: 50%;\\n  margin: 0 auto;\\n}\\n\\n.single-card__content {\\n  margin: 0 auto;\\n}\\n\\n.single-card__title {\\n  text-align: center;\\n}\\n\\n.data-table {\\n  border: none;\\n  margin: 0 auto;\\n}\\n\\n.data-table tr {\\n  margin: 5px;\\n}\\n\\n.data-table td {\\n  padding: 5px 10px;\\n}\\n\\n.table__key {\\n  text-transform: uppercase;\\n  font-weight: 900;\\n}\\n\\n.table__value {\\n  text-decoration: underline;\\n  letter-spacing: 2px;\\n}\\n\\n.single-card__buttons {\\n  width: 70%;\\n  margin: 5px auto 10px !important;\\n  display: flex;\\n  justify-content: space-around;\\n}\\n\\n.single-button {\\n  background-color: white;\\n  border: 1px solid black;\\n}\\n\\n.single-button:hover {\\n  background-color: black;\\n  color: white;\\n  font-weight: bold;\\n  letter-spacing: 2px;\\n  transition: .5s;\\n}\\n\\n.editing-form {\\n  margin: 0 auto;\\n  display: flex;\\n  flex-direction: column;\\n  width: 70%;\\n}\\n\"","module.exports = \"it's a cuctomers page\\n\\n\\n<!-- <div class=\\\"main-area\\\">\\n\\n  <button  class=\\\"return-back\\\" (click)=\\\"goBack()\\\">Back</button>\\n\\n  <div *ngIf=\\\"isData; else loading\\\">\\n  \\n    <mat-card *ngIf=\\\"!isEdit\\\" class=\\\"single-card\\\">\\n  \\n      <mat-card-title class=\\\"single-card__title\\\">\\n        Personal info\\n      </mat-card-title>\\n  \\n      <mat-card-content class=\\\"single-card__content\\\">\\n        <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" class=\\\"data-table\\\">\\n          <tr>\\n            <td class=\\\"table__key\\\">Name</td>\\n            <td class=\\\"table__value\\\">{{ customer.name }}</td>\\n          </tr>\\n          <tr>\\n            <td class=\\\"table__key\\\">Address</td>\\n            <td class=\\\"table__value\\\">{{ customer.address }}</td>\\n          </tr>\\n          <tr>\\n            <td class=\\\"table__key\\\">Phone</td>\\n            <td class=\\\"table__value\\\">{{ customer.phone }}</td>\\n          </tr>\\n        </table>\\n      </mat-card-content>\\n        \\n      <mat-card-actions class=\\\"single-card__buttons\\\">\\n        <button  class=\\\"single-button\\\" (click)=\\\"onEdit()\\\">Edit</button>\\n      </mat-card-actions>\\n    \\n    </mat-card>\\n  \\n    <mat-card *ngIf=\\\"isEdit\\\" class=\\\"single-card\\\">\\n  \\n      <mat-card-title class=\\\"single-card__title\\\">\\n        Data editing \\n      </mat-card-title>\\n    \\n      <mat-card-content class=\\\"single-card__content\\\">\\n        <form class=\\\"editing-form\\\" [formGroup]=\\\"editingForm\\\" (ngSubmit)=\\\"onSave()\\\">\\n  \\n          <mat-form-field class=\\\"input-field\\\">\\n            <input matInput type=\\\"text\\\" formControlName=\\\"name\\\"\\n              placeholder=\\\"Name\\\" value=\\\"{{ customer.name }}\\\"/>\\n          </mat-form-field>\\n  \\n          <mat-form-field class=\\\"input-field\\\">\\n            <input matInput type=\\\"text\\\" formControlName=\\\"address\\\"\\n              placeholder=\\\"Address\\\" value=\\\"{{ customer.address }}\\\"/>\\n          </mat-form-field>\\n  \\n          <mat-form-field class=\\\"input-field\\\">\\n            <input matInput type=\\\"text\\\" formControlName=\\\"phone\\\"\\n              placeholder=\\\"Phone\\\" value=\\\"{{ customer.phone }}\\\"/>\\n          </mat-form-field>\\n  \\n        </form>\\n      </mat-card-content>\\n        \\n      <mat-card-actions class=\\\"single-card__buttons\\\">\\n        <button  class=\\\"single-button\\\" (click)=\\\"toggleMode()\\\">Cancel</button>\\n        <button  class=\\\"single-button\\\" (click)=\\\"onSave()\\\">Save</button>\\n      </mat-card-actions>\\n    \\n    </mat-card>\\n  \\n  </div>\\n  \\n  <ng-template #loading>\\n    loading...\\n  </ng-template>\\n  \\n</div> -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CustomersService } from '../core/services';\nimport { Observable } from 'rxjs';\n\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-customer-page',\n  templateUrl: './customer-page.component.html',\n  styleUrls: ['./customer-page.component.css']\n})\nexport class CustomerPageComponent implements OnInit {\n\n  public id: number;\n  public customer$: Observable<object>;\n  public customer: object;\n  public isData = false;\n  public isEdit = false;\n  public editingForm: FormGroup;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private customerService: CustomersService,\n    private fb: FormBuilder,\n  ) {\n    this.editingForm = this.fb.group({\n      'name': ['', Validators.required],\n      'address': ['', Validators.required],\n      'phone': ['', Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.id = +this.route.snapshot.params['id'];\n    // this.customer$ = this.customerService.getById(this.id);\n    this.customer = this.customerService\n      .getById(this.id)\n      .subscribe(data => {\n        this.customer = data;\n        this.isData = true;\n      });\n  }\n\n  public goBack() {\n    this.router.navigateByUrl('/customers');\n  }\n\n  public onEdit() {\n    this.toggleMode();\n  }\n\n  public onSave() {\n    const userInput = this.editingForm.value;\n    const updatedInfo = {\n      name: userInput['name'] || this.customer['name'],\n      address: userInput['address'] || this.customer['address'],\n      phone: userInput['phone'] || this.customer['phone'],\n    };\n    this.customerService\n      .updateById(this.id, updatedInfo)\n      .subscribe((data) => this.customer = data);\n    this.editingForm.reset();\n    this.toggleMode();\n  }\n\n  public toggleMode() {\n    this.isEdit = !this.isEdit;\n  }\n\n}\n","module.exports = \".main-area {\\n  text-align: center;\\n  margin: 30px auto;\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.single-button {\\n  background-color: white;\\n  border: 1px solid black;\\n}\\n\\n.single-button:hover {\\n  background-color: black;\\n  color: white;\\n  font-weight: bold;\\n  letter-spacing: 2px;\\n  transition: .5s;\\n}\\n\\n.main-button {\\n  background-color: black;\\n  border: 1px solid black;\\n  color: white;\\n  font-size: 20px;\\n  font-weight: 900;\\n  letter-spacing: 2px;\\n}\\n\\n.main-button:hover {\\n  background-color: white;\\n  color: black;\\n  letter-spacing: 5px;\\n  transition: .5s;\\n}\\n\\n/* ########################## */\\n\\n.data-input-form {\\n  width: 350px;\\n  text-align: center;\\n}\\n\\n.input-field {\\n  width: 80%;\\n}\\n\\n.form-actions {\\n  display: flex;\\n  justify-content: space-around;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n/* ########################## */\\n\\n.data-list, .no-data {\\n  margin: 20px auto;\\n}\\n\\n.data-list {\\n  display: flex;\\n  flex-wrap: wrap;\\n  margin-left: 50px;\\n}\\n\\n.item-card {\\n  margin: 10px;\\n  width: 250px;\\n}\\n\\n.item-name {\\n  text-decoration: none;\\n  color: black;\\n}\\n\\n.item-name:hover {\\n  font-weight: bold;\\n  cursor: pointer;\\n}\\n\"","module.exports = \"<h2>Customers list</h2>\\n\\n<br>\\n\\n<form [formGroup]=\\\"addingForm\\\" (ngSubmit)=\\\"onCreate()\\\">\\n  <input type=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Name\\\" required>\\n  <input type=\\\"text\\\" formControlName=\\\"address\\\" placeholder=\\\"Address\\\" required />\\n  <input type=\\\"text\\\" formControlName=\\\"phone\\\" placeholder=\\\"Phone\\\" required />\\n</form>\\n\\n<div class=\\\"container\\\">\\n  <button class=\\\"single-button\\\" type=\\\"submit\\\" (click)=\\\"onCreate()\\\">\\n    Create\\n  </button>\\n  <button class=\\\"single-button\\\" (click)=\\\"closeForm()\\\">\\n    Cancel\\n  </button>\\n</div>\\n\\n<ngx-datatable class=\\\"bootstrap\\\" [columns]=\\\"tableColumns\\\" [rows]=\\\"customers | async\\\" [columnMode]=\\\"'force'\\\"\\n  [headerHeight]=\\\"50\\\" [rowHeight]=\\\"50\\\">\\n\\n  <!-- (activate)=\\\"onActivate($event)\\\" -->\\n\\n  <!-- [loadingIndicator]=\\\"loadingIndicator\\\"\\n[headerHeight]=\\\"40\\\"\\n[summaryRow]=\\\"true\\\"\\n[summaryPosition]=\\\"'bottom'\\\"\\n[footerHeight]=\\\"40\\\"\\n[limit]=\\\"10\\\"\\n[reorderable]=\\\"reorderable\\\" -->\\n\\n</ngx-datatable>\\n\\n<ng-template #actionTmpl let-row=\\\"row\\\" let-value=\\\"value\\\">\\n\\n  <!-- TODO : убрать кнопки, оставить только иконки -->\\n\\n  <div class=\\\"d-flex justify-content-around\\\">\\n\\n    <button class=\\\"btn btn-outline-info btn-rounded waves-effect px-3\\\" (click)=\\\"onEdit(row)\\\">\\n      <i class=\\\"fa fa-pencil-alt\\\"></i>\\n    </button>\\n\\n    <button class=\\\"btn btn-outline-info btn-rounded waves-effect px-3\\\" (click)=\\\"onDelete(row)\\\">\\n      <i class=\\\"fa fa-trash-alt\\\"></i>\\n    </button>\\n\\n  </div>\\n\\n</ng-template>\\n\\n<br>\\n\"","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { CustomersService } from '../core/services';\nimport { ICustomer } from '../core/models';\n\nimport { ConfirmDeleteComponent } from './../shared/confirm-delete/confirm-delete.component';\nimport { EditWindowComponent } from '../shared/edit-window/edit-window.component';\n\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n\n  @ViewChild('actionTmpl') actionTmpl: TemplateRef<any>;\n\n  public customers: BehaviorSubject<ICustomer[]>  = new BehaviorSubject<ICustomer[]>([]);\n  public customersSub = this.customers.asObservable();\n  public addingForm: FormGroup;\n\n  public formIsOpened = false;\n  public isEdit = false;\n\n  public tableColumns = [];\n\n  constructor(\n    private customerService: CustomersService,\n    private fb: FormBuilder,\n    private modalService: NgbModal\n  ) {\n    this.addingForm = this.fb.group({\n      'name': ['', Validators.required],\n      'address': ['', Validators.required],\n      'phone': ['', Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.customersSub.subscribe(val => console.log('customers value', val))\n\n    this.customerService\n      .getAll()\n      .subscribe(data => {\n        this.customers.next(data);\n      });\n    this.tableColumns = [\n      { name: 'Name', prop: 'name',  },\n      { name: 'Phone', prop: 'phone' },\n      { name: 'Address', prop: 'address' },\n      { cellTemplate: this.actionTmpl }\n    ];\n  }\n\n  public onCreate() {\n    const userInput = this.addingForm.value;\n    this.customerService\n      .create(userInput)\n      .subscribe(newCustomer => {\n        const arr = this.customers.getValue().concat(newCustomer);\n        this.customers.next(arr);\n      });\n    this.addingForm.reset();\n    this.closeForm();\n  }\n\n  public onDelete(obj) {\n    const modalRef = this.modalService\n      .open(ConfirmDeleteComponent, { centered: true });\n\n    modalRef.componentInstance.name = obj.name;\n\n    modalRef.result\n      .then((result) => {\n        // is it necessary to remove ?\n        if (result) {\n          this.customerService\n            .deleteById(obj.id)\n            .subscribe((data) => {\n              const arr = this.customers.getValue().filter(el => el.id !== obj.id);\n              this.customers.next(arr);\n            });\n        }\n      });\n  }\n\n  public onEdit(customer: ICustomer) {\n    const modalRef = this.modalService\n      .open(EditWindowComponent, { centered: true });\n\n    modalRef.componentInstance.customer = customer;\n\n    modalRef.result\n      .then((result) => {\n        // is it necessary to edit ?\n        if (result) {\n          this.customerService\n            .updateById(customer.id, result)\n            .subscribe((updatedCustomer) => {\n              const arr = this.customers.getValue();\n              const index = arr.findIndex(el => el.id === customer.id);\n              console.log('arr => ', arr);\n\n              arr.splice(index, 1, updatedCustomer);\n\n              const arrr = Object.assign({}, arr)\n              this.customers.next(arrr);\n\n              console.log('arr => ', arrr);\n\n              // oldCustomer = Object.assign({}, oldCustomer, updatedCustomer);\n\n              // console.log('data => ', data);\n              // const arr = this.customers.getValue();\n              // const index = arr.indexOf(obj);\n              // console.log('arr[index] => ', arr[index]);\n              // arr[index] = data;\n              // console.log('arr[index] => ', arr[index]);\n              // console.log('arr => ', arr);\n\n              // console.log('customers BEFORE => ', this.customers.getValue());\n              // // this.customers.next(arr);\n              // console.log('customers AFTER => ', this.customers.getValue());\n            });\n        }\n      });\n  }\n\n  public openForm() {\n    this.formIsOpened = true;\n  }\n\n  public closeForm() {\n    this.formIsOpened = false;\n  }\n\n}\n","module.exports = \".toolbar-area {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  height: 40px;\\n  background: #3f51b5;\\n}\\n\\n.project-name {\\n  border-radius: 25px;\\n  box-shadow: 0 0 10px 5px #fff;\\n  background-color: #d6d6d6;\\n  padding: 0 10px;\\n  color: #3f51b5;\\n  font-weight: 900;\\n  font-weight: bold;\\n  cursor: pointer;\\n}\\n\\n.toolbar-buttons a {\\n  color: #fff;\\n  font-size: 20px;\\n  font-weight: bold;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Invoice app</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/customers\\\">Customers</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/products\\\">Products</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link disabled\\\" routerLink=\\\"/\\\">Invoices</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() { }\n\n}\n","module.exports = \".lorem-ipsum {\\n  font-size: 20px;\\n}\\n\"","module.exports = \"<div class=\\\"lorem-ipsum\\\">\\n  Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  products works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-header\\\">\\n\\n  <h4 class=\\\"modal-title\\\">Confirmation</h4>\\n\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.close(false)\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n\\n</div>\\n\\n<div class=\\\"modal-body\\\">\\n\\n  <p>\\n    <strong>Are you sure you want to delete <span class=\\\"text-primary\\\">\\\"{{ name }}\\\"</span> ?</strong>\\n  </p>\\n  \\n  <p>All information associated to this user profile will be permanently deleted.\\n    <span class=\\\"text-danger\\\">This operation can not be undone.</span>\\n  </p>\\n\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"activeModal.close(false)\\\">Cancel</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"activeModal.close(true)\\\">Delete</button>\\n\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n\n@Component({\n  selector: 'app-confirm-delete',\n  templateUrl: './confirm-delete.component.html',\n  styleUrls: ['./confirm-delete.component.css']\n})\nexport class ConfirmDeleteComponent implements OnInit {\n\n  @Input() name: string;\n\n  constructor(public activeModal: NgbActiveModal) {}\n\n  ngOnInit() {}\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-header\\\">\\n\\n    <h4 class=\\\"modal-title\\\">Editing</h4>\\n  \\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.close(false)\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  \\n  </div>\\n  \\n  <div class=\\\"modal-body\\\">\\n\\n    <form [formGroup]=\\\"editingForm\\\" (ngSubmit)=\\\"onSave()\\\">\\n\\n      <div class=\\\"input-group mb-3\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\">Email</span>\\n        </div>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\"\\n          aria-label=\\\"Sizing example input\\\" aria-describedby=\\\"inputGroup-sizing-default\\\">\\n      </div>\\n  \\n      <div class=\\\"input-group mb-3\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\">Phone</span>\\n        </div>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"phone\\\"\\n          aria-label=\\\"Sizing example input\\\" aria-describedby=\\\"inputGroup-sizing-default\\\">\\n      </div>\\n  \\n      \\n      <div class=\\\"input-group mb-3\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\">Address</span>\\n        </div>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\"\\n          aria-label=\\\"Sizing example input\\\" aria-describedby=\\\"inputGroup-sizing-default\\\">\\n      </div>\\n\\n    </form>\\n        \\n  </div>\\n  \\n  <div class=\\\"modal-footer\\\">\\n  \\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"activeModal.close(false)\\\">Cancel</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"onSave()\\\">Save</button>\\n  \\n  </div>\\n  \"","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ICustomer } from '../../core/models';\n\n\n\n@Component({\n  selector: 'app-edit-window',\n  templateUrl: './edit-window.component.html',\n  styleUrls: ['./edit-window.component.css']\n})\nexport class EditWindowComponent implements OnInit {\n\n  @Input() customer: ICustomer;\n\n  public editingForm: FormGroup;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.editingForm = this.fb.group({\n      'name': [this.customer.name, Validators.required],\n      'phone': [this.customer.phone, Validators.required],\n      'address': [this.customer.address, Validators.required],\n    });\n  }\n\n  public onSave() {\n    const userInput = this.editingForm.value;\n    const updatedInfo = {\n      name: userInput['name'] || this.customer['name'],\n      phone: userInput['phone'] || this.customer['phone'],\n      address: userInput['address'] || this.customer['address'],\n    };\n    this.activeModal.close(updatedInfo);\n    this.editingForm.reset();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ConfirmDeleteComponent } from './confirm-delete/confirm-delete.component';\nimport { EditWindowComponent } from './edit-window/edit-window.component';\n\n\n@NgModule({\n  declarations: [\n    ConfirmDeleteComponent,\n    EditWindowComponent,\n  ],\n  imports: [\n    HttpClientModule,\n\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  entryComponents: [\n    ConfirmDeleteComponent,\n    EditWindowComponent,\n  ],\n  exports: [\n    HttpClientModule,\n\n    FormsModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}