{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/services/api.service.ts","webpack:///./src/app/core/services/customers.service.ts","webpack:///./src/app/core/services/index.ts","webpack:///./src/app/customer-page/customer-page.component.css","webpack:///./src/app/customer-page/customer-page.component.html","webpack:///./src/app/customer-page/customer-page.component.ts","webpack:///./src/app/customers/customers.component.css","webpack:///./src/app/customers/customers.component.html","webpack:///./src/app/customers/customers.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/products/products.component.css","webpack:///./src/app/products/products.component.html","webpack:///./src/app/products/products.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CustomersComponent } from './customers/customers.component';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { CustomerPageComponent } from './customer-page/customer-page.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'customers', component: CustomersComponent },\r\n  { path: 'customers/:id', component: CustomerPageComponent },\r\n  { path: 'products', component: ProductsComponent },\r\n  // { path: '**', redirectTo: 'customers' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(appRoutes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \".app-view {\\r\\n  background-color: #fffccc;\\r\\n}\\r\\n\\r\\n.main-area {\\r\\n  margin: 30px auto;\\r\\n  min-height: 500px;\\r\\n  width: 90%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"app-view\\\">\\r\\n  \\r\\n  <app-header></app-header>\\r\\n\\r\\n  <div class=\\\"main-area\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n  \\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'test-app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { CoreModule } from './core/core.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { HeaderComponent } from './header/header.component';\r\n\r\nimport { CustomersComponent } from './customers/customers.component';\r\nimport { CustomerPageComponent } from './customer-page/customer-page.component';\r\n\r\nimport { ProductsComponent } from './products/products.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    HeaderComponent,\r\n    CustomersComponent,\r\n    CustomerPageComponent,\r\n    ProductsComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n\r\n    SharedModule,\r\n    CoreModule.forRoot(),\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { CustomersService } from './services/customers.service';\r\n\r\n@NgModule({ })\r\nexport class CoreModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: CoreModule,\r\n      providers: [\r\n        CustomersService\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  // private host = 'http://localhost:5000/api';\n  private host = 'https://vdenisov-assessment-api.herokuapp.com/api';\n\n  constructor(private http: HttpClient) { }\n\n  public get(route, params?): Observable<any> {\n    return this.http.get(`${this.host}/${route}`, params);\n  }\n\n  public post(route, data, params?): Observable<any> {\n    return this.http.post(`${this.host}/${route}`, data, params);\n  }\n\n  public put(route, data, params?): Observable<any> {\n    return this.http.put(`${this.host}/${route}`, data, params);\n  }\n\n  public delete(route, params?): Observable<any> {\n    return this.http.delete(`${this.host}/${route}`, params);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomersService {\r\n\r\n  constructor(private apiService: ApiService) {}\r\n\r\n  public create(data) {\r\n    return this.apiService.post(`customers`, data);\r\n  }\r\n\r\n  public getAll() {\r\n    return this.apiService.get(`customers`);\r\n  }\r\n\r\n  public getById(id) {\r\n    return this.apiService.get(`customers/${id}`);\r\n  }\r\n\r\n  public updateById(id, data) {\r\n    return this.apiService.put(`customers/${id}`, data);\r\n  }\r\n\r\n  public deleteById(id) {\r\n    return this.apiService.delete(`customers/${id}`);\r\n  }\r\n\r\n}\r\n","export { CustomersService } from './customers.service';\r\n","module.exports = \".return-back {\\r\\n  background-color: black;\\r\\n  border: 1px solid black;\\r\\n  color: white;\\r\\n  font-size: 20px;\\r\\n  font-weight: 900;\\r\\n  letter-spacing: 2px;\\r\\n}\\r\\n\\r\\n.return-back:hover {\\r\\n  background-color: white;\\r\\n  color: black;\\r\\n  letter-spacing: 5px;\\r\\n  transition: .5s;\\r\\n}\\r\\n\\r\\n.single-card {\\r\\n  width: 50%;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.single-card__content {\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.single-card__title {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.data-table {\\r\\n  border: none;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.data-table tr {\\r\\n  margin: 5px;\\r\\n}\\r\\n\\r\\n.data-table td {\\r\\n  padding: 5px 10px;\\r\\n}\\r\\n\\r\\n.table__key {\\r\\n  text-transform: uppercase;\\r\\n  font-weight: 900;\\r\\n}\\r\\n\\r\\n.table__value {\\r\\n  text-decoration: underline;\\r\\n  letter-spacing: 2px;\\r\\n}\\r\\n\\r\\n.single-card__buttons {\\r\\n  width: 70%;\\r\\n  margin: 5px auto 10px !important;\\r\\n  display: flex;\\r\\n  justify-content: space-around;\\r\\n}\\r\\n\\r\\n.single-button {\\r\\n  background-color: white;\\r\\n  border: 1px solid black;\\r\\n}\\r\\n\\r\\n.single-button:hover {\\r\\n  background-color: black;\\r\\n  color: white;\\r\\n  font-weight: bold;\\r\\n  letter-spacing: 2px;\\r\\n  transition: .5s;\\r\\n}\\r\\n\\r\\n.editing-form {\\r\\n  margin: 0 auto;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  width: 70%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"main-area\\\">\\n\\n  <button mat-button class=\\\"return-back\\\" (click)=\\\"goBack()\\\">Back</button>\\n\\n  <div *ngIf=\\\"isData; else loading\\\">\\n  \\n    <mat-card *ngIf=\\\"!isEdit\\\" class=\\\"single-card\\\">\\n  \\n      <mat-card-title class=\\\"single-card__title\\\">\\n        Personal info\\n      </mat-card-title>\\n  \\n      <mat-card-content class=\\\"single-card__content\\\">\\n        <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" class=\\\"data-table\\\">\\n          <tr>\\n            <td class=\\\"table__key\\\">Name</td>\\n            <td class=\\\"table__value\\\">{{ customer.name }}</td>\\n          </tr>\\n          <tr>\\n            <td class=\\\"table__key\\\">Address</td>\\n            <td class=\\\"table__value\\\">{{ customer.address }}</td>\\n          </tr>\\n          <tr>\\n            <td class=\\\"table__key\\\">Phone</td>\\n            <td class=\\\"table__value\\\">{{ customer.phone }}</td>\\n          </tr>\\n        </table>\\n      </mat-card-content>\\n        \\n      <mat-card-actions class=\\\"single-card__buttons\\\">\\n        <button mat-button class=\\\"single-button\\\" (click)=\\\"onEdit()\\\">Edit</button>\\n      </mat-card-actions>\\n    \\n    </mat-card>\\n  \\n    <mat-card *ngIf=\\\"isEdit\\\" class=\\\"single-card\\\">\\n  \\n      <mat-card-title class=\\\"single-card__title\\\">\\n        Data editing \\n      </mat-card-title>\\n    \\n      <mat-card-content class=\\\"single-card__content\\\">\\n        <form class=\\\"editing-form\\\" [formGroup]=\\\"editingForm\\\" (ngSubmit)=\\\"onSave()\\\">\\n  \\n          <mat-form-field class=\\\"input-field\\\">\\n            <input matInput type=\\\"text\\\" formControlName=\\\"name\\\"\\n              placeholder=\\\"Name\\\" value=\\\"{{ customer.name }}\\\"/>\\n          </mat-form-field>\\n  \\n          <mat-form-field class=\\\"input-field\\\">\\n            <input matInput type=\\\"text\\\" formControlName=\\\"address\\\"\\n              placeholder=\\\"Address\\\" value=\\\"{{ customer.address }}\\\"/>\\n          </mat-form-field>\\n  \\n          <mat-form-field class=\\\"input-field\\\">\\n            <input matInput type=\\\"text\\\" formControlName=\\\"phone\\\"\\n              placeholder=\\\"Phone\\\" value=\\\"{{ customer.phone }}\\\"/>\\n          </mat-form-field>\\n  \\n        </form>\\n      </mat-card-content>\\n        \\n      <mat-card-actions class=\\\"single-card__buttons\\\">\\n        <button mat-button class=\\\"single-button\\\" (click)=\\\"toggleMode()\\\">Cancel</button>\\n        <button mat-button class=\\\"single-button\\\" (click)=\\\"onSave()\\\">Save</button>\\n      </mat-card-actions>\\n    \\n    </mat-card>\\n  \\n  </div>\\n  \\n  <ng-template #loading>\\n    loading...\\n  </ng-template>\\n  \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CustomersService } from '../core/services';\nimport { Observable } from 'rxjs';\n\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-customer-page',\n  templateUrl: './customer-page.component.html',\n  styleUrls: ['./customer-page.component.css']\n})\nexport class CustomerPageComponent implements OnInit {\n\n  public id: number;\n  public customer$: Observable<object>;\n  public customer: object;\n  public isData = false;\n  public isEdit = false;\n  public editingForm: FormGroup;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private customerService: CustomersService,\n    private fb: FormBuilder,\n  ) {\n    this.editingForm = this.fb.group({\n      'name': ['', Validators.required],\n      'address': ['', Validators.required],\n      'phone': ['', Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.id = +this.route.snapshot.params['id'];\n    // this.customer$ = this.customerService.getById(this.id);\n    this.customer = this.customerService\n      .getById(this.id)\n      .subscribe(data => {\n        this.customer = data;\n        this.isData = true;\n      });\n  }\n\n  public goBack() {\n    this.router.navigateByUrl('/customers');\n  }\n\n  public onEdit() {\n    this.toggleMode();\n  }\n\n  public onSave() {\n    const userInput = this.editingForm.value;\n    const updatedInfo = {\n      name: userInput['name'] || this.customer['name'],\n      address: userInput['address'] || this.customer['address'],\n      phone: userInput['phone'] || this.customer['phone'],\n    };\n    this.customerService\n      .updateById(this.id, updatedInfo)\n      .subscribe((data) => this.customer = data);\n    this.editingForm.reset();\n    this.toggleMode();\n  }\n\n  public toggleMode() {\n    this.isEdit = !this.isEdit;\n  }\n\n}\n","module.exports = \".main-area {\\r\\n  text-align: center;\\r\\n  margin: 30px auto;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.single-button {\\r\\n  background-color: white;\\r\\n  border: 1px solid black;\\r\\n}\\r\\n\\r\\n.single-button:hover {\\r\\n  background-color: black;\\r\\n  color: white;\\r\\n  font-weight: bold;\\r\\n  letter-spacing: 2px;\\r\\n  transition: .5s;\\r\\n}\\r\\n\\r\\n.main-button {\\r\\n  background-color: black;\\r\\n  border: 1px solid black;\\r\\n  color: white;\\r\\n  font-size: 20px;\\r\\n  font-weight: 900;\\r\\n  letter-spacing: 2px;\\r\\n}\\r\\n\\r\\n.main-button:hover {\\r\\n  background-color: white;\\r\\n  color: black;\\r\\n  letter-spacing: 5px;\\r\\n  transition: .5s;\\r\\n}\\r\\n\\r\\n/* ########################## */\\r\\n\\r\\n.data-input-form {\\r\\n  width: 350px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.input-field {\\r\\n  width: 80%;\\r\\n}\\r\\n\\r\\n.form-actions {\\r\\n  display: flex;\\r\\n  justify-content: space-around;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n/* ########################## */\\r\\n\\r\\n.data-list, .no-data {\\r\\n  margin: 20px auto;\\r\\n}\\r\\n\\r\\n.data-list {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n  margin-left: 50px;\\r\\n}\\r\\n\\r\\n.item-card {\\r\\n  margin: 10px;\\r\\n  width: 250px;\\r\\n}\\r\\n\\r\\n.item-name {\\r\\n  text-decoration: none;\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n.item-name:hover {\\r\\n  font-weight: bold;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"main-area\\\">\\r\\n\\r\\n  <button mat-button class=\\\"main-button\\\"\\r\\n    *ngIf=\\\"!formIsOpened\\\" (click)=\\\"openForm()\\\">\\r\\n    Add\\r\\n  </button>\\r\\n\\r\\n  <mat-card *ngIf=\\\"formIsOpened\\\" class=\\\"data-input-form\\\">\\r\\n\\r\\n    <mat-card-content class=\\\"adding-form\\\">\\r\\n      <form [formGroup]=\\\"addingForm\\\" (ngSubmit)=\\\"onCreate()\\\">\\r\\n\\r\\n        <mat-form-field class=\\\"input-field\\\">\\r\\n          <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Name\\\"/>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"input-field\\\">\\r\\n          <input matInput type=\\\"text\\\" formControlName=\\\"address\\\" placeholder=\\\"Address\\\"/>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"input-field\\\">\\r\\n          <input matInput type=\\\"text\\\" formControlName=\\\"phone\\\" placeholder=\\\"Phone\\\"/>\\r\\n        </mat-form-field>\\r\\n\\r\\n      </form>\\r\\n    </mat-card-content>\\r\\n\\r\\n    <mat-card-actions class=\\\"form-actions\\\">\\r\\n      <button mat-button class=\\\"single-button\\\" type=\\\"submit\\\" (click)=\\\"onCreate()\\\">\\r\\n        Create\\r\\n      </button>\\r\\n      <button mat-button class=\\\"single-button\\\" (click)=\\\"closeForm()\\\">\\r\\n        Cancel\\r\\n      </button>\\r\\n    </mat-card-actions>\\r\\n\\r\\n  </mat-card>\\r\\n\\r\\n  <!-- ########################## -->\\r\\n\\r\\n  <div *ngIf=\\\"!customers.length\\\" class=\\\"no-data\\\">\\r\\n    No customers\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"customers.length\\\" class=\\\"data-list\\\">\\r\\n\\r\\n    <div *ngFor=\\\"let customer of customers\\\">\\r\\n\\r\\n      <mat-card class=\\\"item-card\\\">\\r\\n\\r\\n        <mat-card-title>\\r\\n          <a class=\\\"item-name\\\" [routerLink]=\\\"['/customers', customer.id]\\\">\\r\\n            {{ customer.name }}\\r\\n          </a>\\r\\n        </mat-card-title>\\r\\n\\r\\n        <mat-card-subtitle>\\r\\n          {{ customer.phone }}\\r\\n        </mat-card-subtitle>\\r\\n\\r\\n        <mat-card-content>\\r\\n          {{ customer.address }}\\r\\n        </mat-card-content>\\r\\n\\r\\n        <mat-card-actions>\\r\\n          <button mat-button class=\\\"single-button\\\" (click)=\\\"onDelete(customer)\\\">Delete</button>\\r\\n        </mat-card-actions>\\r\\n\\r\\n      </mat-card>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { CustomersService } from '../core/services';\r\n\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './customers.component.html',\r\n  styleUrls: ['./customers.component.css']\r\n})\r\nexport class CustomersComponent implements OnInit {\r\n\r\n  public customers: any = [];\r\n  public addingForm: FormGroup;\r\n\r\n  public formIsOpened = false;\r\n  public isEdit = false;\r\n\r\n  constructor(\r\n    private customerService: CustomersService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    this.customerService\r\n      .getAll()\r\n      .subscribe(data => {\r\n        this.customers = data;\r\n      });\r\n    this.addingForm = this.fb.group({\r\n      'name': ['', Validators.required],\r\n      'address': ['', Validators.required],\r\n      'phone': ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  public onCreate() {\r\n    const userInput = this.addingForm.value;\r\n    this.customerService\r\n      .create(userInput)\r\n      .subscribe(newCustomer => {\r\n        this.customers.push(newCustomer);\r\n      });\r\n    this.addingForm.reset();\r\n    this.closeForm();\r\n  }\r\n\r\n  public onDelete(obj) {\r\n    this.customerService\r\n      .deleteById(obj.id)\r\n      .subscribe((data) => {\r\n        const index = this.customers.indexOf(obj);\r\n        this.customers.splice(index, 1);\r\n      });\r\n  }\r\n\r\n  public openForm() {\r\n    this.formIsOpened = true;\r\n  }\r\n\r\n  public closeForm() {\r\n    this.formIsOpened = false;\r\n  }\r\n\r\n}\r\n","module.exports = \".toolbar-area {\\r\\n  display: flex;\\r\\n  flex-direction: row;\\r\\n  justify-content: space-between;\\r\\n  height: 40px;\\r\\n  background: #3f51b5;\\r\\n}\\r\\n\\r\\n.project-name {\\r\\n  border-radius: 25px;\\r\\n  box-shadow: 0 0 10px 5px #fff;\\r\\n  background-color: #d6d6d6;\\r\\n  padding: 0 10px;\\r\\n  color: #3f51b5;\\r\\n  font-weight: 900;\\r\\n  font-weight: bold;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.toolbar-buttons a {\\r\\n  color: #fff;\\r\\n  font-size: 20px;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\"","module.exports = \"<mat-toolbar  class=\\\"toolbar-area\\\">\\r\\n  \\r\\n  <div class=\\\"project-name\\\" (click)=\\\"openHome()\\\">\\r\\n    fe-assessment\\r\\n  </div>\\r\\n\\r\\n  <!-- <div class=\\\"toolbar-buttons\\\">\\r\\n    <button mat-button (click)=\\\"openHome()\\\">Home</button>\\r\\n    <button mat-button (click)=\\\"openCustomers()\\\">Customers</button>\\r\\n    <button mat-button (click)=\\\"openProducts()\\\">Products</button>\\r\\n  </div> -->\\r\\n\\r\\n  <nav mat-tab-nav-bar class=\\\"toolbar-buttons\\\">\\r\\n    <a mat-tab-link *ngFor=\\\"let link of menuLinks\\\"\\r\\n      [routerLink]=\\\"link.path\\\"\\r\\n      routerLinkActive=\\\"active\\\"\\r\\n      [routerLinkActiveOptions]=\\\"{exact: true}\\\"\\r\\n      #rla=\\\"routerLinkActive\\\"\\r\\n      [active]=\\\"rla.isActive\\\">\\r\\n    {{link.label}}\\r\\n    </a>\\r\\n  </nav>\\r\\n\\r\\n</mat-toolbar>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  public menuLinks = [\r\n    { path: '/', label: 'Home' },\r\n    { path: '/customers', label: 'Customers' },\r\n    { path: '/products', label: 'Products' },\r\n  ];\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  openHome() {\r\n    console.log('Redirect to \"/\"');\r\n    this.router.navigateByUrl('/');\r\n  }\r\n\r\n  openCustomers() {\r\n    console.log('Redirect to \"/customers\"');\r\n    this.router.navigateByUrl('/customers');\r\n  }\r\n\r\n  openProducts() {\r\n    console.log('Redirect to \"/products\"');\r\n    this.router.navigateByUrl('/products');\r\n  }\r\n\r\n}\r\n","module.exports = \".lorem-ipsum {\\r\\n  font-size: 20px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"lorem-ipsum\\\">\\r\\n  Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  products works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.css']\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    HttpClientModule,\r\n\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  exports: [\r\n    HttpClientModule,\r\n\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}