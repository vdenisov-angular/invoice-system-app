{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/models/index.ts","webpack:///./src/app/core/services/api.service.ts","webpack:///./src/app/core/services/customers.service.ts","webpack:///./src/app/core/services/index.ts","webpack:///./src/app/core/services/invoices.service.ts","webpack:///./src/app/core/services/products.service.ts","webpack:///./src/app/customer-page/customer-page.component.css","webpack:///./src/app/customer-page/customer-page.component.html","webpack:///./src/app/customer-page/customer-page.component.ts","webpack:///./src/app/customers/customers.component.css","webpack:///./src/app/customers/customers.component.html","webpack:///./src/app/customers/customers.component.ts","webpack:///./src/app/invoices/invoices.component.css","webpack:///./src/app/invoices/invoices.component.html","webpack:///./src/app/invoices/invoices.component.ts","webpack:///./src/app/products/products.component.css","webpack:///./src/app/products/products.component.html","webpack:///./src/app/products/products.component.ts","webpack:///./src/app/shared/layout/header/header.component.css","webpack:///./src/app/shared/layout/header/header.component.html","webpack:///./src/app/shared/layout/header/header.component.ts","webpack:///./src/app/shared/layout/home/home.component.css","webpack:///./src/app/shared/layout/home/home.component.html","webpack:///./src/app/shared/layout/home/home.component.ts","webpack:///./src/app/shared/layout/index.ts","webpack:///./src/app/shared/modals/confirm-delete/confirm-delete.component.css","webpack:///./src/app/shared/modals/confirm-delete/confirm-delete.component.html","webpack:///./src/app/shared/modals/confirm-delete/confirm-delete.component.ts","webpack:///./src/app/shared/modals/customers-create-update/customers-create-update.component.css","webpack:///./src/app/shared/modals/customers-create-update/customers-create-update.component.html","webpack:///./src/app/shared/modals/customers-create-update/customers-create-update.component.ts","webpack:///./src/app/shared/modals/index.ts","webpack:///./src/app/shared/modals/products-create-update/products-create-update.component.css","webpack:///./src/app/shared/modals/products-create-update/products-create-update.component.html","webpack:///./src/app/shared/modals/products-create-update/products-create-update.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './shared/layout';\r\n\r\nimport { CustomersComponent } from './customers/customers.component';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { CustomerPageComponent } from './customer-page/customer-page.component';\r\nimport { InvoicesComponent } from './invoices/invoices.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'customers', component: CustomersComponent },\r\n  { path: 'customers/:id', component: CustomerPageComponent },\r\n  { path: 'products', component: ProductsComponent },\r\n  { path: 'invoices', component: InvoicesComponent },\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(appRoutes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \".main-area {\\r\\n  margin: 30px auto;\\r\\n  min-height: 500px;\\r\\n  width: 90%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"app-view\\\">\\r\\n  \\r\\n  <app-header></app-header>\\r\\n\\r\\n  <div class=\\\"main-area\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n  \\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'test-app';\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\n\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { CoreModule } from './core/core.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { CustomersComponent } from './customers/customers.component';\r\nimport { CustomerPageComponent } from './customer-page/customer-page.component';\r\nimport { ProductsComponent } from './products/products.component';\nimport { InvoicesComponent } from './invoices/invoices.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CustomersComponent,\r\n    CustomerPageComponent,\r\n    ProductsComponent,\r\n    InvoicesComponent,\r\n  ],\r\n  imports: [\r\n    NgbModule,\r\n    NgxDatatableModule,\r\n\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n\r\n    SharedModule,\r\n    CoreModule.forRoot(),\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport {\r\n  CustomersService,\r\n  ProductsService,\r\n  InvoicesService,\r\n} from './services';\r\n\r\n\r\n@NgModule({ })\r\nexport class CoreModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: CoreModule,\r\n      providers: [\r\n        CustomersService,\r\n        ProductsService,\r\n        InvoicesService,\r\n      ]\r\n    };\r\n  }\r\n}\r\n","// INTERFACES\r\n\r\nexport interface ICustomer {\r\n  id?: number;\r\n  name: string;\r\n  phone: string;\r\n  address: string;\r\n}\r\n\r\nexport interface IProduct {\r\n  id?: number;\r\n  name: string;\r\n  price: number;\r\n}\r\n\r\nexport interface IInvoice {\r\n  id: number;\r\n  customer_id: number;\r\n  discount: number;\r\n  total: number;\r\n}\r\n\r\nexport interface IInvoiceItem {\r\n  id: number;\r\n  invoice_id: number;\r\n  product_id: number;\r\n  quantity: number;\r\n}\r\n\r\n// CLASSES\r\n\r\nexport class Customer implements ICustomer {\r\n\r\n  public name = '';\r\n  public phone = '';\r\n  public address = '';\r\n\r\n  constructor(customerObject: ICustomer) {\r\n    this.name = customerObject.name;\r\n    this.phone = customerObject.phone;\r\n    this.address = customerObject.address;\r\n  }\r\n\r\n}\r\n\r\nexport class Product implements IProduct {\r\n\r\n  public name = '';\r\n  public price = 0;\r\n\r\n  constructor(productObject?: IProduct) {\r\n    if (productObject) {\r\n      this.name = productObject.name;\r\n      this.price = productObject.price;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  // private host = 'http://localhost:5000/api';\n  private host = 'https://vdenisov-assessment-api.herokuapp.com/api';\n\n  constructor(private http: HttpClient) { }\n\n  public get(route, params?): Observable<any> {\n    return this.http.get(`${this.host}/${route}`, params);\n  }\n\n  public post(route, data, params?): Observable<any> {\n    return this.http.post(`${this.host}/${route}`, data, params);\n  }\n\n  public put(route, data, params?): Observable<any> {\n    return this.http.put(`${this.host}/${route}`, data, params);\n  }\n\n  public delete(route, params?): Observable<any> {\n    return this.http.delete(`${this.host}/${route}`, params);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomersService {\r\n\r\n  constructor(private apiService: ApiService) {}\r\n\r\n  public create(data) {\r\n    return this.apiService.post(`customers`, data);\r\n  }\r\n\r\n  public getAll() {\r\n    return this.apiService.get(`customers`);\r\n  }\r\n\r\n  public getById(id) {\r\n    return this.apiService.get(`customers/${id}`);\r\n  }\r\n\r\n  public updateById(id, data) {\r\n    return this.apiService.put(`customers/${id}`, data);\r\n  }\r\n\r\n  public deleteById(id) {\r\n    return this.apiService.delete(`customers/${id}`);\r\n  }\r\n\r\n}\r\n","export { CustomersService } from './customers.service';\r\nexport { ProductsService } from './products.service';\r\nexport { InvoicesService } from './invoices.service';\r\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvoicesService {\n\n  constructor(private apiService: ApiService) {}\n\n  public create(data) {\n    return this.apiService.post(`invoices`, data);\n  }\n\n  public getAll() {\n    return this.apiService.get(`invoices`);\n  }\n\n  public getById(id) {\n    return this.apiService.get(`invoices/${id}`);\n  }\n\n  public updateById(id, data) {\n    return this.apiService.put(`invoices/${id}`, data);\n  }\n\n  public deleteById(id) {\n    return this.apiService.delete(`invoices/${id}`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  constructor(private apiService: ApiService) {}\n\n  public create(data) {\n    return this.apiService.post(`products`, data);\n  }\n\n  public getAll() {\n    return this.apiService.get(`products`);\n  }\n\n  public getById(id) {\n    return this.apiService.get(`products/${id}`);\n  }\n\n  public updateById(id, data) {\n    return this.apiService.put(`products/${id}`, data);\n  }\n\n  public deleteById(id) {\n    return this.apiService.delete(`products/${id}`);\n  }\n\n}\n","module.exports = \".return-back {\\r\\n  background-color: black;\\r\\n  border: 1px solid black;\\r\\n  color: white;\\r\\n  font-size: 20px;\\r\\n  font-weight: 900;\\r\\n  letter-spacing: 2px;\\r\\n}\\r\\n\\r\\n.return-back:hover {\\r\\n  background-color: white;\\r\\n  color: black;\\r\\n  letter-spacing: 5px;\\r\\n  transition: .5s;\\r\\n}\\r\\n\\r\\n.single-card {\\r\\n  width: 50%;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.single-card__content {\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.single-card__title {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.data-table {\\r\\n  border: none;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.data-table tr {\\r\\n  margin: 5px;\\r\\n}\\r\\n\\r\\n.data-table td {\\r\\n  padding: 5px 10px;\\r\\n}\\r\\n\\r\\n.table__key {\\r\\n  text-transform: uppercase;\\r\\n  font-weight: 900;\\r\\n}\\r\\n\\r\\n.table__value {\\r\\n  text-decoration: underline;\\r\\n  letter-spacing: 2px;\\r\\n}\\r\\n\\r\\n.single-card__buttons {\\r\\n  width: 70%;\\r\\n  margin: 5px auto 10px !important;\\r\\n  display: flex;\\r\\n  justify-content: space-around;\\r\\n}\\r\\n\\r\\n.single-button {\\r\\n  background-color: white;\\r\\n  border: 1px solid black;\\r\\n}\\r\\n\\r\\n.single-button:hover {\\r\\n  background-color: black;\\r\\n  color: white;\\r\\n  font-weight: bold;\\r\\n  letter-spacing: 2px;\\r\\n  transition: .5s;\\r\\n}\\r\\n\\r\\n.editing-form {\\r\\n  margin: 0 auto;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  width: 70%;\\r\\n}\\r\\n\"","module.exports = \"it's a cuctomers page\\n\\n\\n<!-- <div class=\\\"main-area\\\">\\n\\n  <button  class=\\\"return-back\\\" (click)=\\\"goBack()\\\">Back</button>\\n\\n  <div *ngIf=\\\"isData; else loading\\\">\\n  \\n    <mat-card *ngIf=\\\"!isEdit\\\" class=\\\"single-card\\\">\\n  \\n      <mat-card-title class=\\\"single-card__title\\\">\\n        Personal info\\n      </mat-card-title>\\n  \\n      <mat-card-content class=\\\"single-card__content\\\">\\n        <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" class=\\\"data-table\\\">\\n          <tr>\\n            <td class=\\\"table__key\\\">Name</td>\\n            <td class=\\\"table__value\\\">{{ customer.name }}</td>\\n          </tr>\\n          <tr>\\n            <td class=\\\"table__key\\\">Address</td>\\n            <td class=\\\"table__value\\\">{{ customer.address }}</td>\\n          </tr>\\n          <tr>\\n            <td class=\\\"table__key\\\">Phone</td>\\n            <td class=\\\"table__value\\\">{{ customer.phone }}</td>\\n          </tr>\\n        </table>\\n      </mat-card-content>\\n        \\n      <mat-card-actions class=\\\"single-card__buttons\\\">\\n        <button  class=\\\"single-button\\\" (click)=\\\"onEdit()\\\">Edit</button>\\n      </mat-card-actions>\\n    \\n    </mat-card>\\n  \\n    <mat-card *ngIf=\\\"isEdit\\\" class=\\\"single-card\\\">\\n  \\n      <mat-card-title class=\\\"single-card__title\\\">\\n        Data editing \\n      </mat-card-title>\\n    \\n      <mat-card-content class=\\\"single-card__content\\\">\\n        <form class=\\\"editing-form\\\" [formGroup]=\\\"editingForm\\\" (ngSubmit)=\\\"onSave()\\\">\\n  \\n          <mat-form-field class=\\\"input-field\\\">\\n            <input matInput type=\\\"text\\\" formControlName=\\\"name\\\"\\n              placeholder=\\\"Name\\\" value=\\\"{{ customer.name }}\\\"/>\\n          </mat-form-field>\\n  \\n          <mat-form-field class=\\\"input-field\\\">\\n            <input matInput type=\\\"text\\\" formControlName=\\\"address\\\"\\n              placeholder=\\\"Address\\\" value=\\\"{{ customer.address }}\\\"/>\\n          </mat-form-field>\\n  \\n          <mat-form-field class=\\\"input-field\\\">\\n            <input matInput type=\\\"text\\\" formControlName=\\\"phone\\\"\\n              placeholder=\\\"Phone\\\" value=\\\"{{ customer.phone }}\\\"/>\\n          </mat-form-field>\\n  \\n        </form>\\n      </mat-card-content>\\n        \\n      <mat-card-actions class=\\\"single-card__buttons\\\">\\n        <button  class=\\\"single-button\\\" (click)=\\\"toggleMode()\\\">Cancel</button>\\n        <button  class=\\\"single-button\\\" (click)=\\\"onSave()\\\">Save</button>\\n      </mat-card-actions>\\n    \\n    </mat-card>\\n  \\n  </div>\\n  \\n  <ng-template #loading>\\n    loading...\\n  </ng-template>\\n  \\n</div> -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CustomersService } from '../core/services';\nimport { Observable } from 'rxjs';\n\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-customer-page',\n  templateUrl: './customer-page.component.html',\n  styleUrls: ['./customer-page.component.css']\n})\nexport class CustomerPageComponent implements OnInit {\n\n  public id: number;\n  public customer$: Observable<object>;\n  public customer: object;\n  public isData = false;\n  public isEdit = false;\n  public editingForm: FormGroup;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private customerService: CustomersService,\n    private fb: FormBuilder,\n  ) {\n    this.editingForm = this.fb.group({\n      'name': ['', Validators.required],\n      'address': ['', Validators.required],\n      'phone': ['', Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.id = +this.route.snapshot.params['id'];\n    // this.customer$ = this.customerService.getById(this.id);\n    this.customer = this.customerService\n      .getById(this.id)\n      .subscribe(data => {\n        this.customer = data;\n        this.isData = true;\n      });\n  }\n\n  public goBack() {\n    this.router.navigateByUrl('/customers');\n  }\n\n  public onEdit() {\n    this.toggleMode();\n  }\n\n  public onSave() {\n    const userInput = this.editingForm.value;\n    const updatedInfo = {\n      name: userInput['name'] || this.customer['name'],\n      address: userInput['address'] || this.customer['address'],\n      phone: userInput['phone'] || this.customer['phone'],\n    };\n    this.customerService\n      .updateById(this.id, updatedInfo)\n      .subscribe((data) => this.customer = data);\n    this.editingForm.reset();\n    this.toggleMode();\n  }\n\n  public toggleMode() {\n    this.isEdit = !this.isEdit;\n  }\n\n}\n","module.exports = \".area-header {\\r\\n  margin: 30px 0;\\r\\n}\\r\\n\\r\\n.area-button-add {\\r\\n  margin-left: 20px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"d-flex flex-row area-header\\\">\\r\\n  <h2>Customers list</h2>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg area-button-add\\\" (click)=\\\"onCreate()\\\">\\r\\n    add\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n<ngx-datatable\\r\\n  class=\\\"material\\\"\\r\\n \\r\\n  [columns]=\\\"tableColumns\\\"\\r\\n  [rows]=\\\"customers | async\\\"\\r\\n  \\r\\n  [columnMode]=\\\"'force'\\\"\\r\\n\\r\\n  [headerHeight]=\\\"50\\\"\\r\\n  [rowHeight]=\\\"70\\\"\\r\\n  [footerHeight]=\\\"50\\\"\\r\\n></ngx-datatable>\\r\\n\\r\\n<ng-template #actionTmpl let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n\\r\\n  <!-- TODO : убрать кнопки, оставить только иконки -->\\r\\n\\r\\n  <div class=\\\"d-flex justify-content-around\\\">\\r\\n\\r\\n    <button class=\\\"btn btn-outline-info btn-rounded waves-effect px-3\\\" (click)=\\\"onEdit(row)\\\">\\r\\n      <i class=\\\"fa fa-pencil-alt\\\"></i>\\r\\n    </button>\\r\\n\\r\\n    <button class=\\\"btn btn-outline-info btn-rounded waves-effect px-3\\\" (click)=\\\"onDelete(row)\\\">\\r\\n      <i class=\\\"fa fa-trash-alt\\\"></i>\\r\\n    </button>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</ng-template>\\r\\n\"","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { CustomersService } from '../core/services';\r\nimport { ICustomer, Customer } from '../core/models';\r\n\r\nimport {\r\n  ConfirmDeleteComponent,\r\n  CustomersCreateUpdateComponent,\r\n} from './../shared/modals';\r\n\r\n\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './customers.component.html',\r\n  styleUrls: ['./customers.component.css']\r\n})\r\nexport class CustomersComponent implements OnInit {\r\n\r\n  @ViewChild('actionTmpl') actionTmpl: TemplateRef<any>;\r\n\r\n  public customers = new BehaviorSubject<ICustomer[]>([]);\r\n  public tableColumns = [];\r\n\r\n  constructor(\r\n    private customerService: CustomersService,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.customerService\r\n      .getAll()\r\n      .subscribe(data => {\r\n        this.customers.next(data);\r\n      });\r\n    this.tableColumns = [\r\n      { name: 'Name', prop: 'name',  },\r\n      { name: 'Phone', prop: 'phone' },\r\n      { name: 'Address', prop: 'address' },\r\n      { cellTemplate: this.actionTmpl }\r\n    ];\r\n  }\r\n\r\n  public onCreate() {\r\n    const modalRef = this.modalService\r\n      .open(CustomersCreateUpdateComponent, { centered: true });\r\n\r\n    const inputData = {\r\n      action: 'create',\r\n      customer: new Customer({name: '', phone: '', address: ''}),\r\n    };\r\n\r\n    Object.assign(modalRef.componentInstance, inputData);\r\n\r\n    modalRef.result\r\n      .then((data) => {\r\n        if (data) {\r\n          this.customerService\r\n            .create(data)\r\n            .subscribe((createdCustomer) => {\r\n              // const arr = this.customers.getValue().concat(createdCustomer);\r\n              // this.customers.next(arr);\r\n              const arr = this.customers.getValue();\r\n              arr.push(createdCustomer);\r\n              this.customers.next([...arr])\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  public onEdit(customer: ICustomer) {\r\n    const modalRef = this.modalService\r\n      .open(CustomersCreateUpdateComponent, { centered: true });\r\n\r\n    const inputData = {\r\n      action: 'edit',\r\n      customer: customer\r\n    };\r\n\r\n    Object.assign(modalRef.componentInstance, inputData);\r\n\r\n    modalRef.result\r\n      .then((data) => {\r\n        if (data) {\r\n          this.customerService\r\n            .updateById(customer.id, data)\r\n            .subscribe((updatedCustomer) => {\r\n              const arr = this.customers.getValue();\r\n              // const index = arr.findIndex(el => el.id === customer.id);\r\n              const index = arr.indexOf(customer);\r\n              arr.splice(index, 1, updatedCustomer);\r\n              this.customers.next([...arr]);\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  public onDelete(customer: ICustomer) {\r\n    const modalRef = this.modalService\r\n      .open(ConfirmDeleteComponent, { centered: true });\r\n\r\n    modalRef.componentInstance.name = customer.name;\r\n\r\n    modalRef.result\r\n      .then((confirmation) => {\r\n        if (confirmation) {\r\n          this.customerService\r\n            .deleteById(customer.id)\r\n            .subscribe((data) => {\r\n              // const arr = this.customers.getValue().filter(el => el.id !== customer.id);\r\n              // this.customers.next(arr);\r\n              const arr = this.customers.getValue();\r\n              const index = arr.indexOf(customer);\r\n              arr.splice(index, 1);\r\n              this.customers.next([...arr]);\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \".area-header {\\r\\n  margin: 30px 0;\\r\\n}\\r\\n\\r\\n.area-button-add {\\r\\n  margin-left: 20px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"d-flex flex-row area-header\\\">\\n  <h2>Invoices list</h2>\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg area-button-add\\\">\\n    add\\n  </button>\\n</div>\\n\\n<p>Table area ...</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from '../../../node_modules/rxjs';\n\nimport { InvoicesService } from '../core/services';\nimport { IInvoice } from '../core/models';\n\n\n@Component({\n  selector: 'app-invoices',\n  templateUrl: './invoices.component.html',\n  styleUrls: ['./invoices.component.css']\n})\nexport class InvoicesComponent implements OnInit {\n\n  public invoices = new BehaviorSubject<IInvoice[]>([]);\n  public tableColumns = [];\n\n  constructor(\n    private invoiceService: InvoicesService,\n  ) { }\n\n  ngOnInit() {\n    console.log('12213123123', this.invoiceService.getAll());\n  }\n\n}\n","module.exports = \".area-header {\\r\\n  margin: 30px 0;\\r\\n}\\r\\n\\r\\n.area-button-add {\\r\\n  margin-left: 20px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"d-flex flex-row area-header\\\">\\r\\n  <h2>Products list</h2>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg area-button-add\\\" (click)=\\\"onCreate()\\\">\\r\\n    add\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n<ngx-datatable\\r\\n  class=\\\"material\\\"\\r\\n \\r\\n  [columns]=\\\"tableColumns\\\"\\r\\n  [rows]=\\\"products | async\\\"\\r\\n  \\r\\n  [columnMode]=\\\"'force'\\\"\\r\\n\\r\\n  [headerHeight]=\\\"50\\\"\\r\\n  [rowHeight]=\\\"70\\\"\\r\\n  [footerHeight]=\\\"50\\\"\\r\\n></ngx-datatable>\\r\\n\\r\\n<ng-template #actionTmpl let-row=\\\"row\\\" let-value=\\\"value\\\">\\r\\n\\r\\n  <!-- TODO : убрать кнопки, оставить только иконки -->\\r\\n\\r\\n  <div class=\\\"d-flex justify-content-around\\\">\\r\\n\\r\\n    <button class=\\\"btn btn-outline-info btn-rounded waves-effect px-3\\\" (click)=\\\"onEdit(row)\\\">\\r\\n      <i class=\\\"fa fa-pencil-alt\\\"></i>\\r\\n    </button>\\r\\n\\r\\n    <button class=\\\"btn btn-outline-info btn-rounded waves-effect px-3\\\" (click)=\\\"onDelete(row)\\\">\\r\\n      <i class=\\\"fa fa-trash-alt\\\"></i>\\r\\n    </button>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</ng-template>\\r\\n\"","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { ProductsService } from '../core/services';\r\nimport { IProduct, Product } from '../core/models';\r\n\r\nimport {\r\n  ConfirmDeleteComponent,\r\n  ProductsCreateUpdateComponent,\r\n} from '../shared/modals';\r\n\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.css']\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n\r\n  @ViewChild('actionTmpl') actionTmpl: TemplateRef<any>;\r\n\r\n  public products = new BehaviorSubject<IProduct[]>([]);\r\n  public tableColumns = [];\r\n\r\n  constructor(\r\n    private productService: ProductsService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.productService\r\n      .getAll()\r\n      .subscribe(data => {\r\n        this.products.next(data);\r\n      });\r\n    this.tableColumns = [\r\n      { name: 'Name', prop: 'name',  },\r\n      { name: 'Price $', prop: 'price' },\r\n      { cellTemplate: this.actionTmpl }\r\n    ];\r\n  }\r\n\r\n  public onCreate() {\r\n    const modalRef = this.modalService\r\n      .open(ProductsCreateUpdateComponent, { centered: true });\r\n\r\n    const inputData = {\r\n      action: 'create',\r\n      product: new Product()\r\n    };\r\n\r\n    Object.assign(modalRef.componentInstance, inputData);\r\n\r\n    modalRef.result\r\n      .then((data) => {\r\n        if (data) {\r\n          this.productService\r\n            .create(data)\r\n            .subscribe((createdProduct) => {\r\n              const arr = this.products.getValue();\r\n              arr.push(createdProduct);\r\n              this.products.next([...arr])\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  public onEdit(product: IProduct) {\r\n    const modalRef = this.modalService\r\n      .open(ProductsCreateUpdateComponent, { centered: true });\r\n\r\n    const inputData = {\r\n      action: 'edit',\r\n      product: product\r\n    };\r\n\r\n    Object.assign(modalRef.componentInstance, inputData);\r\n\r\n    modalRef.result\r\n      .then((data) => {\r\n        if (data) {\r\n          this.productService\r\n            .updateById(product.id, data)\r\n            .subscribe((updatedProduct) => {\r\n              const arr = this.products.getValue();\r\n              const index = arr.indexOf(product);\r\n              arr.splice(index, 1, updatedProduct);\r\n              this.products.next([...arr]);\r\n            });\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  public onDelete(product: IProduct) {\r\n    const modalRef = this.modalService\r\n      .open(ConfirmDeleteComponent, { centered: true });\r\n\r\n    modalRef.componentInstance.name = product.name;\r\n\r\n    modalRef.result\r\n      .then((confirmation) => {\r\n        if (confirmation) {\r\n          this.productService\r\n            .deleteById(product.id)\r\n            .subscribe((data) => {\r\n              const arr = this.products.getValue().filter(el => el.id !== product.id);\r\n              this.products.next([...arr]);\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \".active {\\r\\n  color: red;\\r\\n  font-weight: bold; \\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n\\r\\n  <a class=\\\"navbar-brand\\\">Invoice app</a>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\r\\n    <ul class=\\\"nav navbar-nav\\\">\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <button class=\\\"btn btn-link\\\" (click)=\\\"openCustomers()\\\">\\r\\n          Customers\\r\\n        </button>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <button class=\\\"btn btn-link\\\" (click)=\\\"openProducts()\\\">\\r\\n          Products\\r\\n        </button>\\r\\n      </li>\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <button class=\\\"btn btn-link\\\" (click)=\\\"openInvoices()\\\">\\r\\n          Invoices\\r\\n        </button>\\r\\n      </li>\\r\\n\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  public openHome() {\r\n    this.router.navigateByUrl('/');\r\n  }\r\n\r\n  public openCustomers() {\r\n    this.router.navigateByUrl('/customers');\r\n  }\r\n\r\n  public openProducts() {\r\n    this.router.navigateByUrl('/products');\r\n  }\r\n\r\n  public openInvoices() {\r\n    this.router.navigateByUrl('/invoices');\r\n  }\r\n\r\n}\r\n","module.exports = \".lorem-ipsum {\\r\\n  font-size: 20px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"lorem-ipsum\\\">\\r\\n  Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export { HeaderComponent } from './header/header.component';\r\nexport { HomeComponent } from './home/home.component';\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-header\\\">\\n\\n  <h4 class=\\\"modal-title\\\">Confirmation</h4>\\n\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.close(false)\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n\\n</div>\\n\\n<div class=\\\"modal-body\\\">\\n\\n  <p>\\n    <strong>Are you sure you want to delete <span class=\\\"text-primary\\\">\\\"{{ name }}\\\"</span> ?</strong>\\n  </p>\\n  \\n  <p>All information associated to this user profile will be permanently deleted.\\n    <span class=\\\"text-danger\\\">This operation can not be undone.</span>\\n  </p>\\n\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"activeModal.close(false)\\\">Cancel</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"activeModal.close(true)\\\">Delete</button>\\n\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n\n@Component({\n  selector: 'app-confirm-delete',\n  templateUrl: './confirm-delete.component.html',\n  styleUrls: ['./confirm-delete.component.css']\n})\nexport class ConfirmDeleteComponent implements OnInit {\n\n  @Input() name: string;\n\n  constructor(public activeModal: NgbActiveModal) {}\n\n  ngOnInit() {}\n\n}\n","module.exports = \".has-danger {\\r\\n  border: red 2px solid;\\r\\n}\\r\\n\\r\\n.has-success {\\r\\n  border: green 2px solid;\\r\\n}\\r\\n\\r\\n.form-control-feedback {\\r\\n  margin-bottom: 10px;\\r\\n  font-size: 14px;\\r\\n  color: red;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal-header\\\">\\n\\n  <span class=\\\"modal-title\\\">\\n    <h4 *ngIf=\\\"action === 'create'\\\">Create form</h4>\\n    <h4 *ngIf=\\\"action === 'edit'\\\">Edit form</h4>\\n  </span>\\n\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.close(false)\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n\\n</div>\\n\\n<div class=\\\"modal-body\\\">\\n\\n  <form [formGroup]=\\\"editingForm\\\" (ngSubmit)=\\\"onSave()\\\">\\n\\n    <!-- NAME -->\\n\\n    <div class=\\\"input-group mb-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\">Name</span>\\n      </div>\\n      <input mdbInputDirective data-error=\\\"wrong text\\\" data-success=\\\"right text\\\"\\n        type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\"\\n        aria-label=\\\"Sizing example input\\\" aria-describedby=\\\"inputGroup-sizing-default\\\">\\n    </div>\\n\\n    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"nameInvalid\\\">\\n      <p *ngIf=\\\"errorNameRequired\\\">Name is required</p>\\n      <p *ngIf=\\\"errorNameMinlen\\\">Name must be 10 characters long</p>\\n      <p *ngIf=\\\"errorNameMaxlen\\\">Name must contain no more than 30 characters</p>\\n    </div>\\n\\n    <!-- PHONE -->\\n\\n    <div class=\\\"input-group mb-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\">Phone</span>\\n      </div>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"phone\\\"\\n        aria-label=\\\"Sizing example input\\\" aria-describedby=\\\"inputGroup-sizing-default\\\">\\n    </div>\\n\\n    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"phoneInvalid\\\">\\n      <p *ngIf=\\\"errorPhoneRequired\\\">Phone is required</p>\\n      <p *ngIf=\\\"errorPhoneMinlen\\\">Phone must be 6 characters long</p>\\n      <p *ngIf=\\\"errorPhoneMaxlen\\\">Phone must contain no more than 11 characters</p>\\n    </div>\\n  \\n    <!-- ADDRESS -->\\n  \\n    <div class=\\\"input-group mb-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\">Address</span>\\n      </div>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\"\\n        aria-label=\\\"Sizing example input\\\" aria-describedby=\\\"inputGroup-sizing-default\\\">\\n    </div>\\n\\n    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"addressInvalid\\\">\\n      <p *ngIf=\\\"errorAddressRequired\\\">Address is required</p>\\n      <p *ngIf=\\\"errorAddressMinlen\\\">Address must be 10 characters long</p>\\n      <p *ngIf=\\\"errorAddressMaxlen\\\">Address must contain no more than 30 characters</p>\\n    </div>\\n\\n  </form>\\n      \\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"activeModal.close(false)\\\">\\n    Cancel\\n  </button>\\n  \\n  <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"onSave()\\\"\\n  [disabled]=\\\"editingForm.pristine || editingForm.invalid\\\">\\n    {{ buttonOk }}\\n  </button>\\n\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ICustomer } from '../../../core/models';\n\n\n@Component({\n  selector: 'app-customers-create-update',\n  templateUrl: './customers-create-update.component.html',\n  styleUrls: ['./customers-create-update.component.css']\n})\nexport class CustomersCreateUpdateComponent implements OnInit {\n\n  @Input() action: string;\n  @Input() customer: ICustomer;\n\n  public editingForm: FormGroup;\n  public buttonOk: string;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.buttonOk = (this.action === 'edit') ? 'Update' : 'Create';\n\n    this.editingForm = this.fb.group({\n\n      name: new FormControl(\n        this.customer.name,\n        [\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(30),\n        ]\n      ),\n\n      phone: new FormControl(\n        this.customer.phone,\n        [\n          Validators.required,\n          Validators.minLength(6),\n          Validators.maxLength(11),\n        ]\n      ),\n\n      address: new FormControl(\n        this.customer.address,\n        [\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(30),\n        ]\n      ),\n\n    });\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // VALIDATION\n\n  get name() { return this.editingForm.get('name') }\n  get nameInvalid() { return  this.name.invalid && ( this.name.dirty ||  this.name.touched) }\n  get errorNameRequired() { return this.name.hasError('required') && this.name.touched }\n  get errorNameMinlen() { return this.name.hasError('minlength') && this.name.touched }\n  get errorNameMaxlen() { return this.name.hasError('maxlength') && this.name.touched }\n\n  get phone() { return this.editingForm.get('phone') }\n  get phoneInvalid() { return  this.phone.invalid && ( this.phone.dirty ||  this.phone.touched) }\n  get errorPhoneRequired() { return this.phone.hasError('required') && this.phone.touched }\n  get errorPhoneMinlen() { return this.phone.hasError('minlength') && this.phone.touched }\n  get errorPhoneMaxlen() { return this.phone.hasError('maxlength') && this.phone.touched }\n\n  get address() { return this.editingForm.get('address') }\n  get addressInvalid() { return  this.address.invalid && ( this.address.dirty ||  this.address.touched) }\n  get errorAddressRequired() { return this.address.hasError('required') && this.address.touched }\n  get errorAddressMinlen() { return this.address.hasError('minlength') && this.address.touched }\n  get errorAddressMaxlen() { return this.address.hasError('maxlength') && this.address.touched }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n\n  public onSave() {\n    const userInput = this.editingForm.value;\n    const updatedInfo = {\n      name: userInput.name || this.customer.name,\n      phone: userInput.phone || this.customer.phone,\n      address: userInput.address || this.customer.address,\n    };\n    this.activeModal.close(updatedInfo);\n    this.editingForm.reset();\n  }\n\n}\n","export { ConfirmDeleteComponent } from './confirm-delete/confirm-delete.component';\r\n\r\nexport { CustomersCreateUpdateComponent } from './customers-create-update/customers-create-update.component';\r\nexport { ProductsCreateUpdateComponent } from './products-create-update/products-create-update.component';\r\n","module.exports = \".has-danger {\\r\\n  border: red 2px solid;\\r\\n}\\r\\n\\r\\n.has-success {\\r\\n  border: green 2px solid;\\r\\n}\\r\\n\\r\\n.form-control-feedback {\\r\\n  margin-bottom: 10px;\\r\\n  font-size: 14px;\\r\\n  color: red;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"modal-header\\\">\\n\\n  <span class=\\\"modal-title\\\">\\n    <h4 *ngIf=\\\"action === 'create'\\\">Create form</h4>\\n    <h4 *ngIf=\\\"action === 'edit'\\\">Edit form</h4>\\n  </span>\\n\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.close(false)\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n\\n</div>\\n\\n<div class=\\\"modal-body\\\">\\n\\n  <form [formGroup]=\\\"editingForm\\\" (ngSubmit)=\\\"onSave()\\\">\\n\\n    <!-- NAME -->\\n\\n    <div class=\\\"input-group mb-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\">Name</span>\\n      </div>\\n      <input mdbInputDirective data-error=\\\"wrong text\\\" data-success=\\\"right text\\\"\\n        type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\"\\n        aria-label=\\\"Sizing example input\\\" aria-describedby=\\\"inputGroup-sizing-default\\\">\\n    </div>\\n\\n    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"nameInvalid\\\">\\n      <p *ngIf=\\\"errorNameRequired\\\">Name is required</p>\\n    </div>\\n\\n    <!-- PRICE -->\\n\\n    <div class=\\\"input-group mb-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-default\\\">Price $</span>\\n      </div>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"price\\\"\\n        aria-label=\\\"Sizing example input\\\" aria-describedby=\\\"inputGroup-sizing-default\\\">\\n    </div>\\n\\n    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"priceInvalid\\\">\\n      <p *ngIf=\\\"errorPriceRequired\\\">Price is required</p>\\n    </div>\\n\\n  </form>\\n    \\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"activeModal.close(false)\\\">\\n    Cancel\\n  </button>\\n  \\n  <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"onSave()\\\">\\n    {{ buttonOk }}\\n  </button>\\n\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { IProduct } from '../../../core/models';\n\n\n@Component({\n  selector: 'app-products-create-update',\n  templateUrl: './products-create-update.component.html',\n  styleUrls: ['./products-create-update.component.css']\n})\nexport class ProductsCreateUpdateComponent implements OnInit {\n\n  @Input() action: string;\n  @Input() product: IProduct;\n\n  public editingForm: FormGroup;\n  public buttonOk: string;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.buttonOk = (this.action === 'edit') ? 'Update' : 'Create';\n\n    this.editingForm = this.fb.group({\n\n      name: new FormControl(\n        this.product.name,\n        [\n          Validators.required,\n        ]\n      ),\n\n      price: new FormControl(\n        this.product.price,\n        [\n          Validators.required,\n        ]\n      ),\n\n    });\n  }\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n  // VALIDATION\n\n  get name() { return this.editingForm.get('name') }\n  get nameInvalid() { return  this.name.invalid && ( this.name.dirty ||  this.name.touched) }\n  get errorNameRequired() { return this.name.hasError('required') && this.name.touched }\n\n  get price() { return this.editingForm.get('price') }\n  get priceInvalid() { return  this.price.invalid && ( this.price.dirty ||  this.price.touched) }\n  get errorPriceRequired() { return this.price.hasError('required') && this.price.touched }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n\n  public onSave() {\n    const userInput = this.editingForm.value;\n    const updatedInfo = {\n      name: userInput.name || this.product.name,\n      price: userInput.price || this.product.price,\n    };\n    this.activeModal.close(updatedInfo);\n    this.editingForm.reset();\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport {\r\n  HeaderComponent,\r\n  HomeComponent,\r\n} from './layout';\r\n\r\nimport {\r\n  ConfirmDeleteComponent,\r\n\r\n  CustomersCreateUpdateComponent,\r\n  ProductsCreateUpdateComponent,\r\n} from './modals';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HeaderComponent,\r\n    HomeComponent,\r\n\r\n    ConfirmDeleteComponent,\r\n\r\n    CustomersCreateUpdateComponent,\r\n    ProductsCreateUpdateComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  entryComponents: [\r\n    ConfirmDeleteComponent,\r\n\r\n    CustomersCreateUpdateComponent,\r\n    ProductsCreateUpdateComponent,\r\n  ],\r\n  exports: [\r\n    HeaderComponent,\r\n    HomeComponent,\r\n\r\n    HttpClientModule,\r\n\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}